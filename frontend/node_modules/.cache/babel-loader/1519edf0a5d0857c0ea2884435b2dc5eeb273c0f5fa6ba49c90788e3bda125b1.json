{"ast":null,"code":"var _jsxFileName = \"F:\\\\Documents\\\\IIT\\\\SEM2\\\\SDGP\\\\ChatApplication\\\\client\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = _ref => {\n  _s();\n  let {\n    socket,\n    username,\n    room\n  } = _ref;\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const currentDate = new Date();\n  const sendMessage = async () => {\n    //\n    if (currentMessage !== \"\") {\n      const messageData = {\n        room: room,\n        author: username,\n        message: currentMessage,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n      };\n      await socket.emit(\"send_message\", messageData);\n    }\n  };\n\n  //getting data from backend //call back function when you recive a message \n  useEffect(() => {\n    socket.on(\"recive_message\", data => {\n      setMessageList(list => [...list, data]);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    class: \"bg-white h-5/6  w-5/6 rounded-lg overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        class: \"text-4xl font-bold py-3 text-center\",\n        children: \"Live Chat\\uD83D\\uDCAC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatBody\",\n      class: \" bg-yellow-200 h-4/5  rounded-md\",\n      children: messageList.map(message => {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: message.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 28\n        }, this); //displaying message\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatFooter\",\n      class: \"flex p-4 pb-8 outline-dashed\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        class: \" flex-grow rounded-md bg-slate-200 focus: outline-blue-400 h-10\",\n        onChange: event => {\n          setCurrentMessage(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        class: \"rounded-lg\",\n        children: \"\\u26A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"gDKz+24cg75HOdfXSFFmVy0ndt0=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Chat","_ref","_s","socket","username","room","currentMessage","setCurrentMessage","messageList","setMessageList","currentDate","Date","sendMessage","messageData","author","message","time","now","getHours","getMinutes","emit","on","data","list","className","class","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","onChange","event","target","value","onClick","_c","$RefreshReg$"],"sources":["F:/Documents/IIT/SEM2/SDGP/ChatApplication/client/src/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Chat = ({socket, username, room}) => {\r\n\r\n    const [currentMessage, setCurrentMessage] = useState(\"\");\r\n    const [messageList, setMessageList] = useState([]);\r\n\r\n    const currentDate = new Date();\r\n\r\n    const sendMessage = async () =>{  //\r\n        if(currentMessage !== \"\"){\r\n\r\n            const messageData = {\r\n                room: room,\r\n                author: username,\r\n                message: currentMessage,\r\n                time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\r\n            };\r\n\r\n            await socket.emit(\"send_message\", messageData)\r\n        }\r\n    }\r\n\r\n    //getting data from backend //call back function when you recive a message \r\n    useEffect(()=>{\r\n        socket.on(\"recive_message\", (data)=>{\r\n            setMessageList((list)=>[...list,data]);\r\n           \r\n        });\r\n    })\r\n\r\n    return (\r\n        <div className='chat' class=\"bg-white h-5/6  w-5/6 rounded-lg overflow-hidden\">\r\n\r\n            <div className='chatHeader'>\r\n                <h1 class=\"text-4xl font-bold py-3 text-center\">Live ChatðŸ’¬</h1>\r\n            </div>\r\n         \r\n            <div className='chatBody' class=\" bg-yellow-200 h-4/5  rounded-md\">\r\n                {messageList.map((message)=>{\r\n                    return <h1>{message.message}</h1> //displaying message\r\n\r\n                })}\r\n            </div>\r\n           {/* <br/> */}\r\n            <div className='chatFooter' class=\"flex p-4 pb-8 outline-dashed\"> \r\n                <input type='text' class=\" flex-grow rounded-md bg-slate-200 focus: outline-blue-400 h-10\"\r\n                    onChange={(event)=>{\r\n                        setCurrentMessage(event.target.value);\r\n                }}\r\n                />\r\n                <button onClick={sendMessage} class=\"rounded-lg\">âš¡</button>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}